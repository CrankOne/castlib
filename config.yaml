---
# Node below describes various locations that is supposed to be under control
# of castlib.
nodes:
    # Current directory considered as an endpoint (XXX, for testing purposes)
    pwd:
        role: endpoint
        backend:
            type: local
            paths:
                - uri: file://.
                  invariant: distribution
    # CASTOR endpoint: synchronization destination, primary data storage for
    # NA58 and NA64 experiments.
    na64-data-castor:
        role: endpoint
        backend:
            type: CASTOR
            paths: 
                - uri: root://castorpublic.cern.ch://castor/cern.ch/na64/data/cdr
                  invariant: na64
            mask: '*.dat'
            #user: 'p348data'
            #group: 'p348data'
            utils:
                nsls:
                    exec: /usr/bin/nsls
                    template: '{exec} --class --checksum -l {path}'
                stager-get:
                    exec: /usr/bin/stager_get
                    # template: ...
                stager-qry:
                    exec: /usr/bin/stager_qry
                    template: '{exec} -U {tag}'
                xrdcp:
                    exec: /usr/bin/xrdcp
                    # template: ... ?
    # NFS share mounted from NA64's pcdmfs01 node somewhere on the local host
    na64-nfs-share:
        role: enpoint
        backend:
            type: local
            paths:
                - uri: file:///data/cdr
                  invariant: na64
    # Local cache for temporary storaging
    local-cache:
        role: cache
        backend:
            type: local
            paths:
                - uri: file:///eos/home-r/rdusaev/cstl4.cache
                  invariant: cache

backends:
    local: {}

# Queue options (structurally a cerely configuration)
queue:
    # fmt: redis://:password@hostname:port/db_number
    broker_url: 'redis://localhost:6379/0'

# Database options
database:
    args: ['sqlite:///castlib4.sqlite']  # Use 'sqlite://' for in-memory storaging
    kwargs: {}

logging:
    version: 1
    disable_existing_loggers: False
    formatters:
        simple:
            format: "%(asctime)s,%(name)s::%(levelname)s: %(message)s"
        condensed:
            format: "\e[1m%(levelname)15s\e[0m: %(message)s"
    handlers:
        console:
            class: logging.StreamHandler
            level: INFO
            formatter: condensed
            stream: ext://sys.stdout

        info_file_handler:
            class: logging.handlers.RotatingFileHandler
            level: INFO
            formatter: simple
            filename: logs/info.log
            maxBytes: 10485760 # 10MB
            backupCount: 20
            encoding: utf8

        error_file_handler:
            class: logging.handlers.RotatingFileHandler
            level: ERROR
            formatter: simple
            filename: logs/errors.log
            maxBytes: 10485760 # 10MB
            backupCount: 20
            encoding: utf8

        debug_file_handler:
            class: logging.handlers.RotatingFileHandler
            level: DEBUG
            formatter: simple
            filename: logs/debug.log
            maxBytes: 10485760 # 10MB
            backupCount: 20
            encoding: utf8
    loggers:
        __main__:
            level: DEBUG
            handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
            propagate: no
        castlib4:
            level: DEBUG
            handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
            propagate: no
    root:
        level: INFO
        handlers: [console, info_file_handler, error_file_handler]
...
